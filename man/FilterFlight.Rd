% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataprocess.R
\name{FilterFlight}
\alias{FilterFlight}
\title{Filter flights with matching conditions.}
\usage{
FilterFlight(x, max_price = Inf, max_duration = Inf, max_stops = Inf,
  layover = c(0, Inf), carrier_include = unique(x$carriers$Code),
  carrier_exclude = NULL, out_departure = c("00:00", "24:00"),
  out_arrival = c("00:00", "24:00"), in_departure = c("00:00",
  "24:00"), in_arrival = c("00:00", "24:00"))
}
\arguments{
\item{x}{A list of data.frame.}

\item{max_price}{Maximum price.}

\item{max_duration}{Maximum duration in minutes, applied to both outbound and inbound legs.}

\item{max_stops}{Maximum number of stops, applied to both outbound and inbound legs.}

\item{layover}{Range of layover in minutes, applied to each stop.}

\item{carrier_include}{Include specified carriers, applied to both outbound and inbound legs.
Must be IATA codes.}

\item{carrier_exclude}{Exclude specified carriers, applied to both outbound and inbound legs.
Must be IATA codes.}

\item{out_departure}{Range of outbound departure time, \code{"hh:mm"} or numeric values in minutes.}

\item{out_arrival}{Range of outbound arrival time, \code{"hh:mm"} or numeric values in minutes.}

\item{in_departure}{Range of inbound departure time, \code{"hh:mm"} or numeric values in minutes.}

\item{in_arrival}{Range of inbound arrival time, \code{"hh:mm"} or numeric values in minutes.}
}
\value{
A tibble of flight itineraries.
}
\description{
Choose flight itineraries that match the filter conditions.
}
\examples{
\dontrun{
SetAPI("skyscanner-skyscanner-flight-search-v1.p.rapidapi.com", "YOUR_API_KEY")
resp <- CreateSession(origin = "SFO", destination = "LHR",
                      startDate = "2019-07-01", returnDate = "2019-07-10")
resp <- PollSession(respondPOST = resp)
data <- GetData(resp)
FilterFlight(data, max_price = 1000, max_duration = 60 * 24,
             max_stops = 2, layover = c(60, 240),
             carrier_include = c("UA", "AA", "DL", "CX", "NH"),
             carrier_exclude = c("MH", "KE"))
}
}
